{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBMy4fxSpSuZbvNp1E_s2FblikalELpFqg\",\n  authDomain: \"clothing-website-790c4.firebaseapp.com\",\n  databaseURL: \"https://clothing-website-790c4.firebaseio.com\",\n  projectId: \"clothing-website-790c4\",\n  storageBucket: \"clothing-website-790c4.appspot.com\",\n  messagingSenderId: \"877214814642\",\n  appId: \"1:877214814642:web:8b87d61af8acc4a27d94ab\",\n  measurementId: \"G-7H2MEELV8H\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => console.log(auth.signInWithPopup(provider));\nexport default firebase;","map":{"version":3,"sources":["/Users/renahahn/Desktop/website/client/src/firebase/utils/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,wCAFD;AAGXC,EAAAA,WAAW,EAAE,+CAHF;AAIXC,EAAAA,SAAS,EAAE,wBAJA;AAKXC,EAAAA,aAAa,EAAE,oCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACnB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AAEF;;AACD,SAAOf,OAAP;AACH,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOT,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAZ,CAAhC;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBMy4fxSpSuZbvNp1E_s2FblikalELpFqg\",\n    authDomain: \"clothing-website-790c4.firebaseapp.com\",\n    databaseURL: \"https://clothing-website-790c4.firebaseio.com\",\n    projectId: \"clothing-website-790c4\",\n    storageBucket: \"clothing-website-790c4.appspot.com\",\n    messagingSenderId: \"877214814642\",\n    appId: \"1:877214814642:web:8b87d61af8acc4a27d94ab\",\n    measurementId: \"G-7H2MEELV8H\"\n  };\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n      if (!userAuth) return;\n\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n      const snapShot = await userRef.get();\n\n      if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n          await userRef.set({\n            displayName,\n            email,\n            createdAt,\n            ...additionalData\n          })\n        } catch (error) {\n          console.log('Error creating user', error.message);\n        }\n        \n      }\n      return userRef;\n  }\n\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({ prompt: 'select_account'});\n  export const signInWithGoogle = () =>  console.log(auth.signInWithPopup(provider));\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}