{"ast":null,"code":"var _jsxFileName = \"/Users/renahahn/Desktop/website/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  persistor: peresistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n})))), document.getElementById('root')); // We wrap App inside PersistGate so our app can always have access to persistence flow \n// this will allow PersistGate to receive the store & and fire off actions that will re-hydrate the state whenever\n// our application refreshses","map":{"version":3,"sources":["/Users/renahahn/Desktop/website/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","PersistGate","App","store","persistor","render","peresistor","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AAGAN,QAAQ,CAACO,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEG,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CADJ,EAQIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARJ,E,CAYA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <PersistGate persistor={peresistor}>\n                <App />\n            </PersistGate>\n        </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);\n\n\n// We wrap App inside PersistGate so our app can always have access to persistence flow \n// this will allow PersistGate to receive the store & and fire off actions that will re-hydrate the state whenever\n// our application refreshses"]},"metadata":{},"sourceType":"module"}